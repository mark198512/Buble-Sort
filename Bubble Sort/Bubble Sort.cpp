// Bubble Sort.cpp : Этот файл содержит функцию "main". Здесь начинается и заканчивается выполнение программы.
//

#include <iostream>
using namespace std;
                                    
                                  /*Выполняем задание по сортировке*/
                           /*Создаем прототип функции которая выполнит сортировку*/

void bubbleSort(int arrForSort[], const int SIZE);

void main()
{
    setlocale(LC_ALL, "rus");
    const int SIZE = 5;
    int arr[SIZE];

    cout << "Исходный массив:\n";
    for (int i = 0; i < SIZE; i++)
    {
        arr[i] = SIZE - i; // заполняем значениями по убыванию
        cout << arr[i] << "\n__\n";
    }
    cout << "\n\n";

    bubbleSort(arr, SIZE);  // передаем в функцию для сортировки

    cout << "Массив после сортировки:\n";
    for (int i = 0; i < SIZE; i++)
    {
        cout << arr[i] << "\n__\n";
    }
    cout << "\n\n";
}

void bubbleSort(int arrForSort[], const int SIZE)
{
    int buff = 0; // для временного хранения значения, при перезаписи

    for (int i = 0; i < SIZE - 1; i++) // 
    {
        // вложенный цикл проходит от четвертого элемента 
        // до первого, находит с помощью if самое "легкое" значение,
        // сравнивая соседние пары элементов,
        // и поднимает его в нулевую ячейку массива
        for (int j = SIZE - 1; j > i; j--)
        {
            if (arrForSort[j] < arrForSort[j - 1])
            {
                buff = arrForSort[j - 1];
                arrForSort[j - 1] = arrForSort[j];
                arrForSort[j] = buff;
            }
        }
        // далее значение i увеличивается на 1
        // и внутренний цикл будет перебирать элементы 
        // от четвертого до второго. Таким образом поднимет самое
        // "легкое" значение из оставшихся  в первую ячейку и т.д.
    }
}


 
    
    

    


// Запуск программы: CTRL+F5 или меню "Отладка" > "Запуск без отладки"
// Отладка программы: F5 или меню "Отладка" > "Запустить отладку"

// Советы по началу работы 
//   1. В окне обозревателя решений можно добавлять файлы и управлять ими.
//   2. В окне Team Explorer можно подключиться к системе управления версиями.
//   3. В окне "Выходные данные" можно просматривать выходные данные сборки и другие сообщения.
//   4. В окне "Список ошибок" можно просматривать ошибки.
//   5. Последовательно выберите пункты меню "Проект" > "Добавить новый элемент", чтобы создать файлы кода, или "Проект" > "Добавить существующий элемент", чтобы добавить в проект существующие файлы кода.
//   6. Чтобы снова открыть этот проект позже, выберите пункты меню "Файл" > "Открыть" > "Проект" и выберите SLN-файл.
